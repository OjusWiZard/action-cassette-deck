name: ci
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install commitlint
        run: npm install -g @commitlint/config-conventional @commitlint/cli

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  build:
    - name: Checkout 🛎
      uses: actions/checkout@v3

    - name: Setup node env 🏗
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Setup pnpm
      uses: pnpm/action-setup@v2

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install
      run: pnpm install

    - name: Build and check
      run: pnpm run all

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        with:
          milliseconds: 1000
